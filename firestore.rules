rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }
    match /vehicles/{vehicleId} {
      allow write, update, delete: if resource.data.owner_id == request.auth.uid;
      allow read, create: if request.auth.uid != null;
    }
    match /reservations/{reservationId} {
      allow read, create: if request.auth.uid != null;
    }
    match /carports/{carportId}/reservations/{reservationId} {
      allow read, create: if request.auth.uid != null;
    }
    match /carports/{carportId} {
      allow write, update, delete: if resource.data.owner_id == request.auth.uid;
      allow read, create: if request.auth.uid != null;
    }
    match /wallets/{wallet} {
    	allow create: if request.auth.uid != null;
      allow read: if request.auth.uid == resource.data.user_id;
      allow update: if request.resource.data.credit >= 0 && request.resource.data.credit <= resource.data.credit;
    	allow write, delete: if false;
    }
    match /purchases/{purchaseId} {
    	allow create: if request.auth.uid != null;
    }
    match /walletCharges/{chargeId} {
    	allow create: if request.auth.uid != null;
    }
    match /users/{userId}/saved_locations/{location} {
    	allow read, write, delete, update:  if request.auth.uid == resource.data.user_id;
      allow create: if request.auth.uid != null;
    }
    match /users/{userId}/saved_locations/{location} {
    	allow read, write, delete, update:  if request.auth.uid == resource.data.user_id;
      allow create: if request.auth.uid != null;
    }
    match /users/{userId}/owned_vehicles/{vehicleId} {
      allow write, update, delete: if resource.data.owner_id == request.auth.uid;
      allow read, create: if request.auth.uid != null;
    }
    match /users/{userId}/carports/{carportId} {
      allow write, update, delete: if resource.data.owner_id == request.auth.uid;
      allow read, create: if request.auth.uid != null;
    }
  }
}